S3method("[", "ConsensusPartitionList")
export("[.ConsensusPartitionList")
S3method("[", "HierarchicalPartition")
export("[.HierarchicalPartition")
S3method("[[", "ConsensusPartitionList")
export("[[.ConsensusPartitionList")
S3method("[[", "HierarchicalPartition")
export("[[.HierarchicalPartition")
S3method("dim", "ConsensusPartition")
export("dim.ConsensusPartition")
S3method("dim", "ConsensusPartitionList")
export("dim.ConsensusPartitionList")
S3method("dim", "DownSamplingConsensusPartition")
export("dim.DownSamplingConsensusPartition")
S3method("dim", "HierarchicalPartition")
export("dim.HierarchicalPartition")
S3method("print", "hc_table_suggest_best_k")
export("print.hc_table_suggest_best_k")
export("ATC")
export("ATC_approx")
export("FCC")
export("PAC")
export("aPAC")
export("adjust_matrix")
export("adjust_outlier")
export("all_partition_methods")
export("all_top_value_methods")
export("cola")
export("cola_opt")
export("concordance")
export("config_ATC")
export("consensus_partition")
export("consensus_partition_by_down_sampling")
export("correspond_between_rankings")
export("correspond_between_two_rankings")
export("david_enrichment")
export("find_best_km")
export("hierarchical_partition")
export("knee_finder2")
export("knitr_add_tab_item")
export("knitr_insert_tabs")
export("map_to_entrez_id")
export("merge_node_param")
export("recalc_stats")
export("register_NMF")
export("register_SOM")
export("register_partition_methods")
export("register_top_value_methods")
export("relabel_class")
export("remove_partition_methods")
export("remove_top_value_methods")
export("run_all_consensus_partition_methods")
export("test_between_factors")
export("top_elements_overlap")
exportClasses("ConsensusPartition")
export("ConsensusPartition")
exportClasses("ConsensusPartitionList")
export("ConsensusPartitionList")
exportClasses("DownSamplingConsensusPartition")
export("DownSamplingConsensusPartition")
exportClasses("HierarchicalPartition")
export("HierarchicalPartition")
exportMethods("all_leaves")
exportMethods("all_nodes")
exportMethods("cola_report")
exportMethods("collect_classes")
exportMethods("collect_plots")
exportMethods("collect_stats")
exportMethods("colnames")
exportMethods("compare_partitions")
exportMethods("compare_signatures")
exportMethods("consensus_heatmap")
exportMethods("dimension_reduction")
exportMethods("functional_enrichment")
exportMethods("get_anno")
exportMethods("get_anno_col")
exportMethods("get_children_nodes")
exportMethods("get_classes")
exportMethods("get_consensus")
exportMethods("get_matrix")
exportMethods("get_membership")
exportMethods("get_param")
exportMethods("get_signatures")
exportMethods("get_stats")
exportMethods("is_best_k")
exportMethods("is_leaf_node")
exportMethods("is_stable_k")
exportMethods("max_depth")
exportMethods("membership_heatmap")
exportMethods("merge_node")
exportMethods("ncol")
exportMethods("node_info")
exportMethods("node_level")
exportMethods("nrow")
exportMethods("plot_ecdf")
exportMethods("predict_classes")
exportMethods("rownames")
exportMethods("select_partition_number")
exportMethods("split_node")
exportMethods("suggest_best_k")
exportMethods("test_to_known_factors")
exportMethods("top_rows_heatmap")
exportMethods("top_rows_overlap")

import(ComplexHeatmap)
import(GetoptLong)
import(GlobalOptions)
import(brew)
import(circlize)
import(clue)
import(doParallel)
import(doRNG)
import(foreach)
import(grDevices)
import(graphics)
import(grid)
import(matrixStats)
import(methods)
import(utils)
importFrom("irlba", prcomp_irlba)
importFrom("stats", "as.dendrogram", "as.dist", "as.hclust","chisq.test", "cmdscale", "coef", "cophenetic", "cor", "cor.test", "cutree", "dendrapply", "dist", "ecdf", "hclust", "is.leaf", "kmeans", "lm", "nobs", "oneway.test", "p.adjust", "quantile", "reorder", "rnorm", "runif", "var")
importFrom(BiocGenerics, rownames, colnames, nrow, ncol)
importFrom(RColorBrewer, brewer.pal)
importFrom(Rcpp, evalCpp)
importFrom(cluster, pam, silhouette)
importFrom(crayon, reset)
importFrom(crayon,cyan)
importFrom(digest, digest)
importFrom(eulerr, euler)
importFrom(httr, GET, POST, content)
importFrom(impute, impute.knn)
importFrom(knitr, knit, knit2html)
importFrom(markdown, mark)
importFrom(mclust, Mclust, mclustBIC, emControl)
importFrom(microbenchmark, microbenchmark)
importFrom(parallel, mclapply)
importFrom(png, readPNG)
importFrom(skmeans, skmeans)
importFrom(xml2, read_xml, xml_children, xml_attr, xml_text, xml_name)
useDynLib(cola, .registration=TRUE)

